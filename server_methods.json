[
	{
		"namespace" : "Alfred",
		"methods" : [
			{
				"method" : "Alfred.Login",
				"description" : "Initiates session with the server.",
				"parameters" : [
					{
						"name" : "username",
						"description" : "the username for the user",
						"type" : "string"
					},
					{
						"name" : "password", 
						"description" : "the password for the user",
						"type" : "string"
					}
				],
				"returns" : [
					{
						"name" : "key",
						"description" : "the API key for the user",
						"type" : "string"
					}
				]
			},
			{
				"method" : "Alfred.Time",
				"description" : "Gets the server time.",
				"parameters" : [ ],
				"returns" : [
					{
						"name" : "time",
						"description" : "Alfred's system time, in the format YYYY-mm-dd hh:mm:ss GMT-hh:mm",
						"type" : "string"
					}
				]
			}
		]
	},
	{
		"namespace" : "Location",
		"methods" : [
			{
				"method" : "Location.IPLookup",
				"description" : "Gets the physical location of an IP address.",
				"parameters" : [
					{

						"name" : "ip",
						"description" : "the IP address to look up",
						"type" : "string"
					}
				],
				"returns" : [
					{
						"name" : "ipAddress",
						"description" : "the IP address queried",
						"type" : "string"
					},
					{
						"name" : "countryCode",
						"description" : "the short country name",
						"type" : "string"
					},
					{
						"name" : "countryName",
						"description" : "the country containing the IP address",
						"type" : "string"
					},
					{
						"name" : "regionName",
						"description" : "the region (usually the state) containing the IP address",
						"type" : "string"
					},
					{
						"name" : "cityName",
						"description" : "the city containing the IP address",
						"type" : "string"
					},
					{
						"name" : "zipCode",
						"description" : "the zip code containing the IP address",
						"type" : "string"
					}
				]
			},
			{
				"method" : "Location.Weather",
				"description" : "Fetches current weather for a given zip code.",
				"parameters" : [
					{
						"name" : "zip",
						"description" : "the zip code for the area",
						"type" : "string"
					}
				],
				"returns" : [
					{
						"name" : "location",
						"description" : "the city and state for the conditions",
						"type" : "string"
					},
					{
						"name" : "text",
						"description" : "a description of the conditions",
						"type" : "string"
					},
					{
						"name" : "temp",
						"description" : "the current temperature (in Celcius)",
						"type" : "string"
					},
					{
						"name" : "date",
						"description" : "the date of the conditions",
						"type" : "string"
					}
				]
			},
			{
				"method" : "Location.Currency",
				"description" : "Converts currency amounts.",
				"parameters" : [
					{
						"name" : "amount",
						"description" : "the amount to be converted",
						"type" : "string"
					},
					{
						"name" : "from",
						"description" : "the original currency",
						"type" : "string"
					},
					{
						"name" : "to",
						"description" : "the new currency",
						"type" : "string"
					}
				],
				"returns" : [
					{
						"name" : "amount",
						"description" : "the new amount",
						"type" : "number"
					}
				]
			},
			{
				"method" : "Location.Zip",
				"description" : "Fetches Zip Code of the given city.",
				"parameters" : [
					{
						"name" : "city",
						"description" : "the name of the city in the zip code",
						"type" : "string"
					}
				],
				"returns" : [
					{
						"name" : "zip",
						"description" : "the zip code of the city",
						"type" : "string"
					}
				]
			},
			{
				"method" : "Location.AreaCode",
				"description" : "Fetches the area code of the given city.",
				"parameters" : [
					{
						"name" : "city",
						"description" : "the name of the city in the area code",
						"type" : "string"
					}
				],
				"returns" : [
					{
						"name" : "areacode",
						"description" : "the area code of the city",
						"type" : "string"
					}
				]
			},
			{
				"method" : "Location.NearestAirport",
				"description" : "Fetches the closest airport to the given city.",
				"parameters" : [
					{
						"name" : "city",
						"description" : "the name of the city to query",
						"type" : "string"
					}
				],
				"returns" : [
					{
						"name" : "airport",
						"description" : "the closest airport to the city",
						"type" : "string"
					}
				]
			}
		]
	},
	{
		"namespace" : "Minecraft",
		"methods" : [
			{
				"method" : "Minecraft.MOTD",
				"description" : "Gets the MOTD of the given server.",
				"parameters" : [
					{
						"name" : "server",
						"description" : "the Minecraft server to access",
						"type" : "string"
					}
				],
				"returns" : [
					{
						"name" : "motd",
						"description" : "the message of the day of the Minecraft server",
						"type" : "string"
					}
				]
			},
			{
				"method" : "Minecraft.Players",
				"description" : "Gets the current player count of the given server.",
				"parameters" : [
					{
						"name" : "server",
						"description" : "the Minecraft server to access",
						"type" : "string"
					}
				],
				"returns" : [
					{
						"name" : "players",
						"description" : "the number of players on the Minecraft server",
						"type" : "string"
					}
				]
			},
			{
				"method" : "Minecraft.MaxPlayers",
				"description" : "Gets the max player count of the given server.",
				"parameters" : [
					{
						"name" : "server",
						"description" : "the Minecraft server to access",
						"type" : "string"
					}
				],
				"returns" : [
					{
						"name" : "maxPlayers",
						"description" : "the maximum number of players allowed on the Minecraft server",
						"type" : "string"
					}
				]
			}
		]
	},
	{
		"namespace" : "Net",
		"methods" : [
			{
				"method" : "Net.ClientIP",
				"description" : "Returns the connecting client's IP address",
				"parameters" : [ ],
				"returns" : [
					{
						"name" : "ip",
						"description" : "the client's IP address",
						"type" : "string"
					}
				]
			},
			{
				"method" : "Net.Ping",
				"description" : "Pings a host from the server.",
				"parameters" : [
					{
						"name" : "host",
						"description" : "the host to ping",
						"type" : "string"
					}
				],
				"returns" : [
					{
						"name" : "response",
						"description" : "the ping response from the host",
						"type" : "string"
					}
				]
			},
			{
				"method" : "Net.DNS",
				"description" : "Looks up a host from the server.",
				"parameters" : [
					{
						"name" : "host",
						"description" : "the host to lookup",
						"type" : "string"
					}
				],
				"returns" : [
					{
						"name" : "response",
						"description" : "the DNS lookup results for the host",
						"type" : "string"
					}
				]
			},
			{
				"method" : "Net.Shorten",
				"description" : "Shortens a given URL.",
				"parameters" : [
					{
						"name" : "url",
						"description" : "the URL to shorten",
						"type" : "string"
					}
				],
				"returns" : [
					{
						"name" : "url",
						"description" : "the shortened URL",
						"type" : "string"
					}
				]
			},
			{
				"method" : "Net.LMGTFY",
				"description" : "Gives an LMGTFY URL from the given string.",
				"parameters" : [
					{
						"name" : "text",
						"description" : "the text to be included in the URL",
						"type" : "string"
					}
				],
				"returns" : [
					{
						"name" : "url",
						"description" : "the query URL",
						"type" : "string"
					}
				]
			}
		]
	},
	{
		"namespace" : "Net.Bitbucket",
		"methods" : [
			{
				"method" : "Net.Bitbucket.Followers",
				"description" : "Gets the followers of the given Bitbucket user.",
				"parameters" : [
					{
						"name" : "user",
						"description" : "the user to search",
						"type" : "string"
					}
				],
				"returns" : [
					{
						"name" : "followers",
						"description" : "a JSON array of the followers",
						"type" : "json"
					}
				]
			},
			{
				"method" : "Net.Bitbucket.Status",
				"description" : "Gets Bitbucket's status.",
				"parameters" : [ ],
				"returns" : [
					{
						"name" : "time",
						"description" : "the time of the latest update",
						"type" : "string"
					},
					{
						"name" : "description",
						"description" : "the latest status description",
						"type" : "string"
					}
				]
			}
		]
	},
	{
		"namespace" : "Net.Github",
		"methods" : [
			{
				"method" : "Net.Github.Status",
				"description" : "Gets Github's status.",
				"parameters" : [ ],
				"returns" : [
					{
						"name" : "time",
						"description" : "the time of the latest update",
						"type" : "string"
					},
					{
						"name" : "description",
						"description" : "the latest status description",
						"type" : "string"
					}
				]
			}
		]
	},
	{
		"namespace" : "Net.TMDB",
		"methods" : [
			{
				"method" : "Net.TMDB.Movie",
				"description" : "Finds first movie resulting from given title",
				"parameters" : [
					{
						"name" : "title",
						"description" : "the query title",
						"type" : "string"
					}
				],
				"returns" : [
					{
						"name" : "total_results",
						"description" : "the number of returned results",
						"type" : "number"
					},
					{
						"name" : "first_result",
						"description" : "the first returned result",
						"type" : "json"
					}
				]
			}
		]
	},
	{
		"namespace" : "Net.Twitter",
		"methods" : [
			{
				"method" : "Net.Twitter.Tweets",
				"description" : "Gets the most recent tweets of the given user.",
				"parameters" : [
					{
						"name" : "user",
						"description" : "the user whose tweets are fetched",
						"type" : "string"
					}
				],
				"returns" : [
					{
						"name" : "tweets",
						"description" : "the user's most recent tweets",
						"type" : "json"
					}
				]
			},
			{
				"method" : "Net.Twitter.LastTweet",
				"description" : "Gets the most recent tweet of the given user.",
				"parameters" : [
					{
						"name" : "user",
						"description" : "the user whose tweet is fetched",
						"type" : "string"
					}
				],
				"returns" : [
					{
						"name" : "tweet",
						"description" : "the user's most recent tweet",
						"type" : "string"
					}
				]
			}
		]
	},
	{
		"namespace" : "Password",
		"methods" : [
			{
				"method" : "Password.Add",
				"description" : "Adds a password to the password manager.",
				"parameters" : [
					{
						"name" : "site",
						"description" : "the site for which the password is retrieved",
						"type" : "string"
					},
					{
						"name" : "user",
						"description" : "the user of the password",
						"type" : "string"
					},
					{
						"name" : "new",
						"description" : "the new password that is added",
						"type" : "string"
					},
					{
						"name" : "master",
						"description" : "the encryption key and identity verification",
						"type" : "string"
					}
				],
				"returns" : [
					{
						"name" : "message",
						"description" : "the status of the password insertion",
						"type" : "string"
					}
				]
			},
			{
				"method" : "Password.Retrieve",
				"description" : "Retrieves a password from the password manager.",
				"parameters" : [
					{
						"name" : "site",
						"description" : "the site for which the password is retrieved",
						"type" : "string"
					},
					{
						"name" : "user",
						"description" : "the user of the password",
						"type" : "string"
					},
					{
						"name" : "master",
						"description" : "the encryption key and identity verification",
						"type" : "string"
					}
				],
				"returns" : [
					{
						"name" : "password",
						"description" : "the retrieved password",
						"type" : "string"
					}
				]
			}
		]
	},
	{
		"namespace" : "XBMC",
		"methods" : [
			{
				"method" : "XBMC.Pause",
				"description" : "Pauses current stream.",
				"parameters" : [ ],
				"returns" : [
					{
						"name" : "message",
						"description" : "the result of the command.",
						"type" : "string"
					}
				]
			},
			{
				"method" : "XBMC.Next",
				"description" : "Skips to next song in queue.",
				"parameters" : [ ],
				"returns" : [
					{
						"name" : "message",
						"description" : "the result of the command.",
						"type" : "string"
					}
				]
			},
			{
				"method" : "XBMC.Previous",
				"description" : "Skips to previous song in queue.",
				"parameters" : [ ],
				"returns" : [
					{
						"name" : "message",
						"description" : "the result of the command.",
						"type" : "string"
					}
				]
			},
			{
				"method" : "XBMC.Shuffle",
				"description" : "Shuffles Now Playing queue.",
				"parameters" : [ ],
				"returns" : [
					{
						"name" : "message",
						"description" : "the result of the command.",
						"type" : "string"
					}
				]
			},
			{
				"method" : "XBMC.Mute",
				"description" : "Mutes XBMC.",
				"parameters" : [ ],
				"returns" : [
					{
						"name" : "message",
						"description" : "the result of the command.",
						"type" : "string"
					}
				]
			},
			{
				"method" : "XBMC.Unmute",
				"description" : "Unmutes XBMC.",
				"parameters" : [ ],
				"returns" : [
					{
						"name" : "message",
						"description" : "the result of the command.",
						"type" : "string"
					}
				]
			},
			{
				"method" : "XBMC.Up",
				"description" : "Moves XBMC selection up.",
				"parameters" : [ ],
				"returns" : [
					{
						"name" : "message",
						"description" : "the result of the command.",
						"type" : "string"
					}
				]
			},
			{
				"method" : "XBMC.Down",
				"description" : "Moves XBMC selection down.",
				"parameters" : [ ],
				"returns" : [
					{
						"name" : "message",
						"description" : "the result of the command.",
						"type" : "string"
					}
				]
			},
			{
				"method" : "XBMC.Left",
				"description" : "Moves XBMC selection left.",
				"parameters" : [ ],
				"returns" : [
					{
						"name" : "message",
						"description" : "the result of the command.",
						"type" : "string"
					}
				]
			},
			{
				"method" : "XBMC.Right",
				"description" : "Moves XBMC selection right.",
				"parameters" : [ ],
				"returns" : [
					{
						"name" : "message",
						"description" : "the result of the command.",
						"type" : "string"
					}
				]
			},
			{
				"method" : "XBMC.Select",
				"description" : "Makes XBMC selection.",
				"parameters" : [ ],
				"returns" : [
					{
						"name" : "message",
						"description" : "the result of the command.",
						"type" : "string"
					}
				]
			},
			{
				"method" : "XBMC.Volume",
				"description" : "Sets XBMC volume.",
				"parameters" : [
					{
						"name" : "volume",
						"description" : "the player's new volume",
						"type" : "string"
					}
				],
				"returns" : [
					{
						"name" : "message",
						"description" : "the result of the command.",
						"type" : "string"
					}
				]
			}
		]
	}
]
